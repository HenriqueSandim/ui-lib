{"version":3,"sources":["../src/index.tsx","../src/components/Button/ButtonRoot.tsx","../src/components/Icon/index.tsx","../src/components/Button/ButtonIcon.tsx","../src/components/Button/ButtonText.tsx","../src/components/Button/Button.tsx"],"sourcesContent":["export * from \"./components\";\r\n","import * as React from \"react\";\r\nimport { VariantProps, cva } from \"class-variance-authority\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { tv } from \"tailwind-variants\";\r\n\r\nconst buttonVariants = tv({\r\n  base: \"flex justify-center items-center gap-xs w-fit disabled:cursor-not-allowed\",\r\n  variants: {\r\n    variant: {\r\n      filled:\r\n        \"bg-brand-500 text-neuter-50 hover:bg-brand-400 hover:border-brand-400 transition-colors duration-300 ease-in-out border-2 border-brand-500 focus:border-brand-600 active:border-brand-600 active:bg-brand-600 disabled:opacity-50\",\r\n      outlined:\r\n        \"bg-neuter-transparent text-brand-500 hover:bg-brand-100 transition-colors duration-300 ease-in-out border-2 border-brand-500 focus:border-brand-600 active:border-brand-600 active:bg-brand-200 disabled:opacity-50\",\r\n      borderless:\r\n        \"bg-neuter-transparent text-brand-500 hover:bg-brand-100 transition-colors duration-300 ease-in-out focus:border-2 focus:border-brand-600 active:bg-brand-200 active:text-brand-600 disabled:opacity-50\",\r\n    },\r\n    size: {\r\n      sm: \"h-10 px-2 text-sm font-bold\",\r\n      md: \"h-12 px-3 text-md font-bold\",\r\n      lg: \"h-14 px-4 text-lg font-bold\",\r\n    },\r\n    shape: {\r\n      square: \"rounded-md\",\r\n      rounded: \"rounded-full\",\r\n    },\r\n  },\r\n});\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  href?: string;\r\n}\r\n\r\nconst ButtonRoot = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  (\r\n    {\r\n      className,\r\n      children,\r\n      href,\r\n      variant = \"filled\",\r\n      size = \"lg\",\r\n      shape = \"square\",\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    if (href) {\r\n      return (\r\n        <a\r\n          href={href}\r\n          className={twMerge(\r\n            buttonVariants({ variant, size, shape, className })\r\n          )}\r\n        >\r\n          {children}\r\n        </a>\r\n      );\r\n    }\r\n    return (\r\n      <button\r\n        className={twMerge(buttonVariants({ variant, size, shape, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nexport { ButtonRoot, buttonVariants };\r\n","import React from \"react\";\r\n\r\nimport { IconBaseProps } from \"react-icons/lib\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\n\r\nexport interface iIconProps extends IconBaseProps {\r\n  name: string;\r\n  color?: string;\r\n}\r\n\r\nconst Icon: React.FC<iIconProps> = ({ name, color, ...rest }) => {\r\n  let IconComponent: React.ElementType;\r\n  const whichIcon = name.slice(0, 2);\r\n  switch (whichIcon) {\r\n    case \"Fa\": {\r\n      IconComponent = FaIcons[name as keyof typeof FaIcons];\r\n      break;\r\n    }\r\n    case \"Bs\": {\r\n      IconComponent = BsIcons[name as keyof typeof BsIcons];\r\n    }\r\n    case \"Ai\": {\r\n      IconComponent = AiIcons[name as keyof typeof AiIcons];\r\n    }\r\n    default: {\r\n      IconComponent = FaIcons.FaBars;\r\n      break;\r\n    }\r\n  }\r\n  return <IconComponent {...rest} color={color} />;\r\n};\r\n\r\nexport default Icon;\r\n","import { FC } from \"react\";\r\nimport Icon from \"../Icon\";\r\n\r\nexport interface ButtonIconProps {\r\n  name: string;\r\n}\r\n\r\nconst ButtonIcon: FC<ButtonIconProps> = ({ name }) => {\r\n  return <Icon name={name} />;\r\n};\r\n\r\nexport default ButtonIcon;\r\n","export interface ButtonTextProps {\r\n  text: string;\r\n}\r\n\r\nconst ButtonText = ({ text }: ButtonTextProps) => {\r\n  return <p>{text}</p>;\r\n};\r\n\r\nexport default ButtonText;\r\n","import { ButtonRoot } from \"./ButtonRoot\";\r\nimport ButtonIcon from \"./ButtonIcon\";\r\nimport ButtonText from \"./ButtonText\";\r\n\r\nconst Button = {\r\n  Root: ButtonRoot,\r\n  Icon: ButtonIcon,\r\n  Text: ButtonText,\r\n};\r\n\r\nexport default Button;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,YAAuB;AAEvB,4BAAwB;AACxB,+BAAmB;AA8CX;AA5CR,IAAM,qBAAiB,6BAAG;AAAA,EACxB,MAAM;AAAA,EACN,UAAU;AAAA,IACR,SAAS;AAAA,MACP,QACE;AAAA,MACF,UACE;AAAA,MACF,YACE;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AAAA,IACA,OAAO;AAAA,MACL,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AAAA,EACF;AACF,CAAC;AAQD,IAAM,aAAmB;AAAA,EACvB,CACE,IASA,QACG;AAVH,iBACE;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,IA1Cd,IAoCI,IAOK,kBAPL,IAOK;AAAA,MANH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAKF,QAAI,MAAM;AACR,aACE;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,eAAW;AAAA,YACT,eAAe,EAAE,SAAS,MAAM,OAAO,UAAU,CAAC;AAAA,UACpD;AAAA,UAEC;AAAA;AAAA,MACH;AAAA,IAEJ;AACA,WACE;AAAA,MAAC;AAAA;AAAA,QACC,eAAW,+BAAQ,eAAe,EAAE,SAAS,MAAM,OAAO,UAAU,CAAC,CAAC;AAAA,QACtE;AAAA,SACI,QAHL;AAAA,QAKE;AAAA;AAAA,IACH;AAAA,EAEJ;AACF;;;AClEA,cAAyB;AACzB,cAAyB;AACzB,cAAyB;AA0BhB,IAAAA,sBAAA;AAnBT,IAAM,OAA6B,CAAC,OAA6B;AAA7B,eAAE,QAAM,MAZ5C,IAYoC,IAAkB,iBAAlB,IAAkB,CAAhB,QAAM;AAC1C,MAAI;AACJ,QAAM,YAAY,KAAK,MAAM,GAAG,CAAC;AACjC,UAAQ,WAAW;AAAA,IACjB,KAAK,MAAM;AACT,sBAAgB,QAAQ,IAA4B;AACpD;AAAA,IACF;AAAA,IACA,KAAK,MAAM;AACT,sBAAgB,QAAQ,IAA4B;AAAA,IACtD;AAAA,IACA,KAAK,MAAM;AACT,sBAAgB,QAAQ,IAA4B;AAAA,IACtD;AAAA,IACA,SAAS;AACP,sBAAwB;AACxB;AAAA,IACF;AAAA,EACF;AACA,SAAO,6CAAC,gDAAkB,OAAlB,EAAwB,QAAc;AAChD;AAEA,IAAO,eAAQ;;;AC1BN,IAAAC,sBAAA;AADT,IAAM,aAAkC,CAAC,EAAE,KAAK,MAAM;AACpD,SAAO,6CAAC,gBAAK,MAAY;AAC3B;AAEA,IAAO,qBAAQ;;;ACNN,IAAAC,sBAAA;AADT,IAAM,aAAa,CAAC,EAAE,KAAK,MAAuB;AAChD,SAAO,6CAAC,OAAG,gBAAK;AAClB;AAEA,IAAO,qBAAQ;;;ACJf,IAAM,SAAS;AAAA,EACb,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AACR;AAEA,IAAO,iBAAQ;","names":["import_jsx_runtime","import_jsx_runtime","import_jsx_runtime"]}